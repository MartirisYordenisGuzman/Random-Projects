{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/zoila/OneDrive/Escritorio/Today-i-learned/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport crossFetch, { Headers as CrossFetchHeaders } from 'cross-fetch';\nexport var resolveFetch = function resolveFetch(customFetch) {\n  var _fetch;\n  if (customFetch) {\n    _fetch = customFetch;\n  } else if (typeof fetch === 'undefined') {\n    _fetch = crossFetch;\n  } else {\n    _fetch = fetch;\n  }\n  return function () {\n    return _fetch.apply(void 0, arguments);\n  };\n};\nexport var resolveHeadersConstructor = function resolveHeadersConstructor() {\n  if (typeof Headers === 'undefined') {\n    return CrossFetchHeaders;\n  }\n  return Headers;\n};\nexport var fetchWithAuth = function fetchWithAuth(supabaseKey, getAccessToken, customFetch) {\n  var fetch = resolveFetch(customFetch);\n  var HeadersConstructor = resolveHeadersConstructor();\n  return function (input, init) {\n    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _a, accessToken, headers;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getAccessToken();\n            case 2:\n              _context.t1 = _a = _context.sent;\n              _context.t0 = _context.t1 !== null;\n              if (!_context.t0) {\n                _context.next = 6;\n                break;\n              }\n              _context.t0 = _a !== void 0;\n            case 6:\n              if (!_context.t0) {\n                _context.next = 10;\n                break;\n              }\n              _context.t2 = _a;\n              _context.next = 11;\n              break;\n            case 10:\n              _context.t2 = supabaseKey;\n            case 11:\n              accessToken = _context.t2;\n              headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\n              if (!headers.has('apikey')) {\n                headers.set('apikey', supabaseKey);\n              }\n              if (!headers.has('Authorization')) {\n                headers.set('Authorization', \"Bearer \".concat(accessToken));\n              }\n              return _context.abrupt(\"return\", fetch(input, Object.assign(Object.assign({}, init), {\n                headers: headers\n              })));\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  };\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,UAAU,IAAIC,OAAO,IAAIC,iBAAiB,QAAQ,aAAa;AAItE,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,WAAmB,EAAW;EACzD,IAAIC,MAAa;EACjB,IAAID,WAAW,EAAE;IACfC,MAAM,GAAGD,WAAW;GACrB,MAAM,IAAI,OAAOE,KAAK,KAAK,WAAW,EAAE;IACvCD,MAAM,GAAGL,UAA8B;GACxC,MAAM;IACLK,MAAM,GAAGC,KAAK;;EAEhB,OAAO;IAAA,OAAaD,MAAM,yBAAS;EAAA;AACrC,CAAC;AAED,OAAO,IAAME,yBAAyB,GAAG,SAA5BA,yBAAyB,GAAQ;EAC5C,IAAI,OAAON,OAAO,KAAK,WAAW,EAAE;IAClC,OAAOC,iBAAiB;;EAG1B,OAAOD,OAAO;AAChB,CAAC;AAED,OAAO,IAAMO,aAAa,GAAG,SAAhBA,aAAa,CACxBC,WAAmB,EACnBC,cAA4C,EAC5CN,WAAmB,EACV;EACT,IAAME,KAAK,GAAGH,YAAY,CAACC,WAAW,CAAC;EACvC,IAAMO,kBAAkB,GAAGJ,yBAAyB,EAAE;EAEtD,OAAO,UAAOK,KAAK,EAAEC,IAAI;IAAA,OAAIC;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cACN,OAAMJ,cAAc,EAAE;YAAA;cAAA,cAAvBK;cAAA,8BAAwB;cAAA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;gBAAA;gBAAA;cAAA;cAAA;cAAA;cAAA;YAAA;cAAA,cAAIN,WAAW;YAAA;cAArDO,WAAW;cACbC,OAAO,GAAG,IAAIN,kBAAkB,CAACE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,OAAO,CAAC;cAEnD,IAAI,CAACA,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBAC1BD,OAAO,CAACE,GAAG,CAAC,QAAQ,EAAEV,WAAW,CAAC;;cAGpC,IAAI,CAACQ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,EAAE;gBACjCD,OAAO,CAACE,GAAG,CAAC,eAAe,mBAAYH,WAAW,EAAG;;cACtD,iCAEMV,KAAK,CAACM,KAAK,kCAAOC,IAAI;gBAAEI,OAAO,EAAPA;cAAO,GAAG;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAC1C;EAAA;AACH,CAAC","names":["crossFetch","Headers","CrossFetchHeaders","resolveFetch","customFetch","_fetch","fetch","resolveHeadersConstructor","fetchWithAuth","supabaseKey","getAccessToken","HeadersConstructor","input","init","__awaiter","_a","accessToken","headers","has","set"],"sources":["C:\\Users\\zoila\\OneDrive\\Escritorio\\Today-i-learned\\node_modules\\@supabase\\supabase-js\\src\\lib\\fetch.ts"],"sourcesContent":["import crossFetch, { Headers as CrossFetchHeaders } from 'cross-fetch'\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = crossFetch as unknown as Fetch\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n\nexport const resolveHeadersConstructor = () => {\n  if (typeof Headers === 'undefined') {\n    return CrossFetchHeaders\n  }\n\n  return Headers\n}\n\nexport const fetchWithAuth = (\n  supabaseKey: string,\n  getAccessToken: () => Promise<string | null>,\n  customFetch?: Fetch\n): Fetch => {\n  const fetch = resolveFetch(customFetch)\n  const HeadersConstructor = resolveHeadersConstructor()\n\n  return async (input, init) => {\n    const accessToken = (await getAccessToken()) ?? supabaseKey\n    let headers = new HeadersConstructor(init?.headers)\n\n    if (!headers.has('apikey')) {\n      headers.set('apikey', supabaseKey)\n    }\n\n    if (!headers.has('Authorization')) {\n      headers.set('Authorization', `Bearer ${accessToken}`)\n    }\n\n    return fetch(input, { ...init, headers })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}