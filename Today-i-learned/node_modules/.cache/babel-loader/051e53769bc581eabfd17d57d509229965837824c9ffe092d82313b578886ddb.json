{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/zoila/OneDrive/Escritorio/Today-i-learned/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/Users/zoila/OneDrive/Escritorio/Today-i-learned/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/zoila/OneDrive/Escritorio/Today-i-learned/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { resolveFetch } from './helper';\nimport { FunctionsFetchError, FunctionsHttpError, FunctionsRelayError } from './types';\nexport var FunctionsClient = /*#__PURE__*/function () {\n  function FunctionsClient(url) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$headers = _ref.headers,\n      headers = _ref$headers === void 0 ? {} : _ref$headers,\n      customFetch = _ref.customFetch;\n    _classCallCheck(this, FunctionsClient);\n    this.url = url;\n    this.headers = headers;\n    this.fetch = resolveFetch(customFetch);\n  }\n  /**\n   * Updates the authorization header\n   * @param token - the new jwt token sent in the authorisation header\n   */\n  _createClass(FunctionsClient, [{\n    key: \"setAuth\",\n    value: function setAuth(token) {\n      this.headers.Authorization = \"Bearer \".concat(token);\n    }\n    /**\n     * Invokes a function\n     * @param functionName - the name of the function to invoke\n     */\n  }, {\n    key: \"invoke\",\n    value: function invoke(functionName) {\n      var invokeOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _a;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var headers, functionArgs, _headers, body, response, isRelayError, responseType, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                headers = invokeOptions.headers, functionArgs = invokeOptions.body;\n                _headers = {};\n                if (functionArgs && (headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type') || !headers)) {\n                  if (typeof Blob !== 'undefined' && functionArgs instanceof Blob || functionArgs instanceof ArrayBuffer) {\n                    // will work for File as File inherits Blob\n                    // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                    _headers['Content-Type'] = 'application/octet-stream';\n                    body = functionArgs;\n                  } else if (typeof functionArgs === 'string') {\n                    // plain string\n                    _headers['Content-Type'] = 'text/plain';\n                    body = functionArgs;\n                  } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                    // don't set content-type headers\n                    // Request will automatically add the right boundary value\n                    body = functionArgs;\n                  } else {\n                    // default, assume this is JSON\n                    _headers['Content-Type'] = 'application/json';\n                    body = JSON.stringify(functionArgs);\n                  }\n                }\n                _context.next = 6;\n                return this.fetch(\"\".concat(this.url, \"/\").concat(functionName), {\n                  method: 'POST',\n                  // headers priority is (high to low):\n                  // 1. invoke-level headers\n                  // 2. client-level headers\n                  // 3. default Content-Type header\n                  headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                  body: body\n                }).catch(function (fetchError) {\n                  throw new FunctionsFetchError(fetchError);\n                });\n              case 6:\n                response = _context.sent;\n                isRelayError = response.headers.get('x-relay-error');\n                if (!(isRelayError && isRelayError === 'true')) {\n                  _context.next = 10;\n                  break;\n                }\n                throw new FunctionsRelayError(response);\n              case 10:\n                if (response.ok) {\n                  _context.next = 12;\n                  break;\n                }\n                throw new FunctionsHttpError(response);\n              case 12:\n                responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n                if (!(responseType === 'application/json')) {\n                  _context.next = 19;\n                  break;\n                }\n                _context.next = 16;\n                return response.json();\n              case 16:\n                data = _context.sent;\n                _context.next = 34;\n                break;\n              case 19:\n                if (!(responseType === 'application/octet-stream')) {\n                  _context.next = 25;\n                  break;\n                }\n                _context.next = 22;\n                return response.blob();\n              case 22:\n                data = _context.sent;\n                _context.next = 34;\n                break;\n              case 25:\n                if (!(responseType === 'multipart/form-data')) {\n                  _context.next = 31;\n                  break;\n                }\n                _context.next = 28;\n                return response.formData();\n              case 28:\n                data = _context.sent;\n                _context.next = 34;\n                break;\n              case 31:\n                _context.next = 33;\n                return response.text();\n              case 33:\n                data = _context.sent;\n              case 34:\n                return _context.abrupt(\"return\", {\n                  data: data,\n                  error: null\n                });\n              case 37:\n                _context.prev = 37;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", {\n                  data: null,\n                  error: _context.t0\n                });\n              case 40:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 37]]);\n      }));\n    }\n  }]);\n  return FunctionsClient;\n}();","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,YAAY,QAAQ,UAAU;AACvC,SAEEC,mBAAmB,EACnBC,kBAAkB,EAClBC,mBAAmB,QAGd,SAAS;AAEhB,WAAaC,eAAe;EAK1B,yBACEC,GAAW,EAOL;IAAA,+EAAF,EAAE;MAAA,oBALJC,OAAO;MAAPA,OAAO,6BAAG,EAAE;MACZC,WAAW,QAAXA,WAAW;IAAA;IAMb,IAAI,CAACF,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,KAAK,GAAGR,YAAY,CAACO,WAAW,CAAC;EACxC;EAEA;;;;EAAA;IAAA;IAAA,OAIA,iBAAQE,KAAa;MACnB,IAAI,CAACH,OAAO,CAACI,aAAa,oBAAaD,KAAK,CAAE;IAChD;IAEA;;;;EAAA;IAAA;IAAA,OAIM,gBACJE,YAAoB,EACqB;MAAA,IAAzCC,oFAAuC,EAAE;;;;;;;;;gBAG/BN,OAAO,GAAyBM,aAAa,CAA7CN,OAAO,EAAQO,YAAY,GAAKD,aAAa,CAApCE,IAAI;gBAEjBC,QAAQ,GAA2B,EAAE;gBAEzC,IACEF,YAAY,KACVP,OAAO,IAAI,CAACU,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACb,OAAO,EAAE,cAAc,CAAC,IAAK,CAACA,OAAO,CAAC,EACzF;kBACA,IACG,OAAOc,IAAI,KAAK,WAAW,IAAIP,YAAY,YAAYO,IAAI,IAC5DP,YAAY,YAAYQ,WAAW,EACnC;oBACA;oBACA;oBACAN,QAAQ,CAAC,cAAc,CAAC,GAAG,0BAA0B;oBACrDD,IAAI,GAAGD,YAAY;mBACpB,MAAM,IAAI,OAAOA,YAAY,KAAK,QAAQ,EAAE;oBAC3C;oBACAE,QAAQ,CAAC,cAAc,CAAC,GAAG,YAAY;oBACvCD,IAAI,GAAGD,YAAY;mBACpB,MAAM,IAAI,OAAOS,QAAQ,KAAK,WAAW,IAAIT,YAAY,YAAYS,QAAQ,EAAE;oBAC9E;oBACA;oBACAR,IAAI,GAAGD,YAAY;mBACpB,MAAM;oBACL;oBACAE,QAAQ,CAAC,cAAc,CAAC,GAAG,kBAAkB;oBAC7CD,IAAI,GAAGS,IAAI,CAACC,SAAS,CAACX,YAAY,CAAC;;;gBAEtC;gBAEgB,OAAM,IAAI,CAACL,KAAK,WAAI,IAAI,CAACH,GAAG,cAAIM,YAAY,GAAI;kBAC/Dc,MAAM,EAAE,MAAM;kBACd;kBACA;kBACA;kBACA;kBACAnB,OAAO,gDAAOS,QAAQ,GAAK,IAAI,CAACT,OAAO,GAAKA,OAAO,CAAE;kBACrDQ,IAAI,EAAJA;iBACD,CAAC,CAACY,KAAK,CAAC,UAACC,UAAU,EAAI;kBACtB,MAAM,IAAI1B,mBAAmB,CAAC0B,UAAU,CAAC;gBAC3C,CAAC,CAAC;cAAA;gBAVIC,QAAQ;gBAYRC,YAAY,GAAGD,QAAQ,CAACtB,OAAO,CAACwB,GAAG,CAAC,eAAe,CAAC;gBAAA,MACtDD,YAAY,IAAIA,YAAY,KAAK,MAAM;kBAAA;kBAAA;gBAAA;gBAAA,MACnC,IAAI1B,mBAAmB,CAACyB,QAAQ,CAAC;cAAA;gBAAA,IAGpCA,QAAQ,CAACG,EAAE;kBAAA;kBAAA;gBAAA;gBAAA,MACR,IAAI7B,kBAAkB,CAAC0B,QAAQ,CAAC;cAAA;gBAGpCI,YAAY,GAAG,CAAC,cAAQ,CAAC1B,OAAO,CAACwB,GAAG,CAAC,cAAc,CAAC,mCAAI,YAAY,EAAEG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,EAAE;gBAAA,MAE1FF,YAAY,KAAK,kBAAkB;kBAAA;kBAAA;gBAAA;gBAAA;gBAC9B,OAAMJ,QAAQ,CAACO,IAAI,EAAE;cAAA;gBAA5BC,IAAI;gBAAA;gBAAA;cAAA;gBAAA,MACKJ,YAAY,KAAK,0BAA0B;kBAAA;kBAAA;gBAAA;gBAAA;gBAC7C,OAAMJ,QAAQ,CAACS,IAAI,EAAE;cAAA;gBAA5BD,IAAI;gBAAA;gBAAA;cAAA;gBAAA,MACKJ,YAAY,KAAK,qBAAqB;kBAAA;kBAAA;gBAAA;gBAAA;gBACxC,OAAMJ,QAAQ,CAACU,QAAQ,EAAE;cAAA;gBAAhCF,IAAI;gBAAA;gBAAA;cAAA;gBAAA;gBAGG,OAAMR,QAAQ,CAACW,IAAI,EAAE;cAAA;gBAA5BH,IAAI;cAAA;gBAAA,iCAGC;kBAAEA,IAAI,EAAJA,IAAI;kBAAEI,KAAK,EAAE;gBAAI,CAAE;cAAA;gBAAA;gBAAA;gBAAA,iCAErB;kBAAEJ,IAAI,EAAE,IAAI;kBAAEI,KAAK;gBAAA,CAAE;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;EAE/B;EAAA;AAAA","names":["resolveFetch","FunctionsFetchError","FunctionsHttpError","FunctionsRelayError","FunctionsClient","url","headers","customFetch","fetch","token","Authorization","functionName","invokeOptions","functionArgs","body","_headers","Object","prototype","hasOwnProperty","call","Blob","ArrayBuffer","FormData","JSON","stringify","method","catch","fetchError","response","isRelayError","get","ok","responseType","split","trim","json","data","blob","formData","text","error"],"sources":["C:\\Users\\zoila\\OneDrive\\Escritorio\\Today-i-learned\\node_modules\\@supabase\\functions-js\\src\\FunctionsClient.ts"],"sourcesContent":["import { resolveFetch } from './helper'\nimport {\n  Fetch,\n  FunctionsFetchError,\n  FunctionsHttpError,\n  FunctionsRelayError,\n  FunctionsResponse,\n  FunctionInvokeOptions,\n} from './types'\n\nexport class FunctionsClient {\n  protected url: string\n  protected headers: Record<string, string>\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    {\n      headers = {},\n      customFetch,\n    }: {\n      headers?: Record<string, string>\n      customFetch?: Fetch\n    } = {}\n  ) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(customFetch)\n  }\n\n  /**\n   * Updates the authorization header\n   * @param token - the new jwt token sent in the authorisation header\n   */\n  setAuth(token: string) {\n    this.headers.Authorization = `Bearer ${token}`\n  }\n\n  /**\n   * Invokes a function\n   * @param functionName - the name of the function to invoke\n   */\n  async invoke<T = any>(\n    functionName: string,\n    invokeOptions: FunctionInvokeOptions = {}\n  ): Promise<FunctionsResponse<T>> {\n    try {\n      const { headers, body: functionArgs } = invokeOptions\n\n      let _headers: Record<string, string> = {}\n      let body: any\n      if (\n        functionArgs &&\n        ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)\n      ) {\n        if (\n          (typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n          functionArgs instanceof ArrayBuffer\n        ) {\n          // will work for File as File inherits Blob\n          // also works for ArrayBuffer as it is the same underlying structure as a Blob\n          _headers['Content-Type'] = 'application/octet-stream'\n          body = functionArgs\n        } else if (typeof functionArgs === 'string') {\n          // plain string\n          _headers['Content-Type'] = 'text/plain'\n          body = functionArgs\n        } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n          // don't set content-type headers\n          // Request will automatically add the right boundary value\n          body = functionArgs\n        } else {\n          // default, assume this is JSON\n          _headers['Content-Type'] = 'application/json'\n          body = JSON.stringify(functionArgs)\n        }\n      }\n\n      const response = await this.fetch(`${this.url}/${functionName}`, {\n        method: 'POST',\n        // headers priority is (high to low):\n        // 1. invoke-level headers\n        // 2. client-level headers\n        // 3. default Content-Type header\n        headers: { ..._headers, ...this.headers, ...headers },\n        body,\n      }).catch((fetchError) => {\n        throw new FunctionsFetchError(fetchError)\n      })\n\n      const isRelayError = response.headers.get('x-relay-error')\n      if (isRelayError && isRelayError === 'true') {\n        throw new FunctionsRelayError(response)\n      }\n\n      if (!response.ok) {\n        throw new FunctionsHttpError(response)\n      }\n\n      let responseType = (response.headers.get('Content-Type') ?? 'text/plain').split(';')[0].trim()\n      let data: any\n      if (responseType === 'application/json') {\n        data = await response.json()\n      } else if (responseType === 'application/octet-stream') {\n        data = await response.blob()\n      } else if (responseType === 'multipart/form-data') {\n        data = await response.formData()\n      } else {\n        // default to text\n        data = await response.text()\n      }\n\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}